name: Build, test and run project 

on:
  pull_request:
    branches:
      - 'main'
    types:
      - opened
      - synchronize
  
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up .NET Core
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '8.0.x'

        - name: Install dependencies
          run: dotnet restore
          working-directory: ./blotztask-api

        - name: .Net - Tool restore
          working-directory: ./blotztask-api
          run: |
            dotnet tool restore

        - name: Build the project
          run: dotnet build --configuration Release --no-restore
          working-directory: ./blotztask-api

        - name: Publish the project
          run: dotnet publish -c Release -o ${{ runner.temp }}/blotztask-api
          working-directory: ./blotztask-api

        - name: Generate EF Core migration script
          working-directory: ./blotztask-api
          run: dotnet ef migrations script -o ${{ runner.temp }}/migrations.sql
    
        - name: Upload artifacts for deployment job
          uses: actions/upload-artifact@v4
          with:
            name: .net-app
            path: ${{ runner.temp }}/blotztask-api
  
        - name: Upload migration script for deployment job
          uses: actions/upload-artifact@v4
          with:
            name: db-migrations
            path: ${{ runner.temp }}/migrations.sql 

    deploy:
      runs-on: windows-latest
      needs: build
      environment:
        name: 'Production'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
      steps:
        - name: Download artifact from build job
          uses: actions/download-artifact@v4
          with:
            name: .net-app

        # - name: Set up Azure SQL CLI
        #   uses: Azure/cli@v1
        #   with:
        #     inlineScript: |
        #       az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        #       az sql db update --server <your_server_name> --resource-group <your_resource_group> --name <your_db_name> --service-objective S0

        - name: EF - Apply Migration SQL Script
          uses: azure/sql-action@v2.2.1
          with:
            connection-string: Server=tcp:blotztask.database.windows.net,1433;Initial Catalog=BlotzTaskDatabase;Persist Security Info=False;User ID=azureuser;Password=@BlotzTask;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;
            path: ./migrations.sql       

        # - name: Run migrations on Azure SQL Database
        #   run: |
        #     sqlcmd -S <your_server_name>.database.windows.net -d <your_db_name> -U <your_username> -P <your_password> -i ${{ runner.temp }}/migrations.sql
        #   env:
        #     AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
        #     AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
        #     AZURE_SQL_USER: ${{ secrets.AZURE_SQL_USER }}
        #     AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}    
        
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v3
          with:
            app-name: 'BlotzTaskApp'
            slot-name: 'Production'
            package: .
            publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_24EFDD1C5E6C4F14AAE5D492645AE57E }}
            